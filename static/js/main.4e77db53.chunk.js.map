{"version":3,"sources":["components/TodoTemplate.js","components/TodoInsert.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoTemplate","children","className","TodoInsert","onInsert","useState","value","setValue","onChange","useCallback","e","target","onSubmit","preventDefault","placeholder","type","TodoList","todos","onRemove","onToggle","dataList","map","todo","id","text","checked","cn","onClick","React","memo","App","initialState","localStorage","getItem","JSON","parse","setTodos","Math","random","toString","nextId","setNextId","nextTodo","produce","draft","push","splice","findIndex","todoFind","find","useEffect","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e77db53.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../scss/TodoTemplate.scss';\r\n\r\nconst TodoTemplate = ({children}) => {\r\n  return (\r\n    <div className='TodoTemplate'>\r\n      <div className='app-title'>일정관리</div>\r\n      <div className='content'>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoTemplate;\r\n","import React, { useState, useCallback } from 'react';\r\nimport '../scss/TodoInsert.scss';\r\nimport { MdAdd } from \"react-icons/all\";\r\n\r\nconst TodoInsert = ({onInsert}) => {\r\n\r\n  const [value, setValue] = useState('');\r\n\r\n  const onChange = useCallback(e => {\r\n    setValue(e.target.value);\r\n  }, [])\r\n\r\n  const onSubmit = useCallback((e) => {\r\n    e.preventDefault();\r\n    onInsert(value);\r\n    setValue('');\r\n  }, [onInsert, value]);\r\n\r\n  return (\r\n    <div>\r\n      <form className='TodoInsert' onSubmit={onSubmit}>\r\n        <input onChange={onChange} value={value} placeholder='할 일을 입력하세요'/>\r\n        <button type='submit'>\r\n          <MdAdd/>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoInsert;\r\n","import React, { useCallback } from 'react';\r\nimport '../scss/TodoList.scss';\r\nimport { MdCheckBox, MdCheckBoxOutlineBlank, MdRemoveCircleOutline } from \"react-icons/all\";\r\nimport cn from 'classnames';\r\n\r\nconst TodoList = ({todos, onRemove, onToggle}) => {\r\n\r\n  const dataList = useCallback(() => {\r\n    return todos.map(todo => {\r\n        const {id, text, checked} = todo;\r\n        return (\r\n          <div className='TodoList' key={id}>\r\n            <div className={cn('checkbox', {checked})} onClick={() => onToggle(id)}>\r\n              {checked ? <MdCheckBox/> : <MdCheckBoxOutlineBlank/>}\r\n              <div className='text'>{text}</div>\r\n            </div>\r\n            <div className='remove' onClick={() => onRemove(id)}>\r\n              <MdRemoveCircleOutline/>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    )\r\n  }, [onRemove, onToggle, todos]);\r\n\r\n  return (\r\n    <>\r\n      {dataList()}\r\n    </>\r\n  )\r\n};\r\n\r\nexport default React.memo(TodoList);\r\n","import React, { useCallback, useEffect, useState } from 'react';\nimport TodoTemplate from \"./components/TodoTemplate\";\nimport TodoInsert from \"./components/TodoInsert\";\nimport TodoList from \"./components/TodoList\";\nimport produce from \"immer\";\n\nconst App = () => {\n\n  let initialState = localStorage.getItem('todos');\n\n  if (!initialState) {\n    initialState = localStorage.getItem('todos') || [];\n  } else {\n    initialState = JSON.parse(localStorage.getItem('todos') || []);\n  }\n\n  const [todos, setTodos] = useState(initialState);\n  const [nextId, setNextId] = useState(Math.random().toString(36));\n\n  const onInsert = useCallback((text) => {\n    const nextTodo = {\n      id: nextId,\n      text,\n      checked: false\n    }\n    setTodos(produce(todos, draft => {\n      draft.push(nextTodo);\n    }));\n    setNextId(Math.random().toString(36));\n  }, [nextId, todos]);\n\n  const onRemove = useCallback(id => {\n    setTodos(produce(todos, draft => {\n      draft.splice(draft.findIndex(todo => todo.id === id), 1);\n    }));\n  }, [todos]);\n\n  const onToggle = useCallback(id => {\n    setTodos(produce(todos, draft => {\n      let todoFind = draft.find(todo => todo.id === id);\n      todoFind.checked = !todoFind.checked\n    }))\n  }, [todos]);\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  return (\n    <div>\n      <TodoTemplate>\n        <TodoInsert onInsert={onInsert}/>\n        <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle}/>\n      </TodoTemplate>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}